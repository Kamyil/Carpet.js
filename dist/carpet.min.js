/*!
 * Carpet.js v2.0.1 (http://mgachowski.pl)
 * Copyright 2014-2014 Mateusz Gachowski <mateusz.gachowski@gmail.com>
 * Licensed under MIT (https://github.com/mateuszgachowski/Carpet.js/blob/master/LICENSE)
 */
!function(){"use strict";window.Carpet=function(){function a(){var a={},b=Array.prototype.slice;this.loggingEnabled=!1,this.log=function(){this.debug.apply(this,["log"].concat(b.call(arguments)))},this.warn=function(){this.debug.apply(this,["warn"].concat(b.call(arguments)))},this.error=function(){this.debug.apply(this,["error"].concat(b.call(arguments)))},this.info=function(){this.debug.apply(this,["info"].concat(b.call(arguments)))},this.clearConsole=function(){this.debug.apply(this,["clear"])},this.debug=function(a){var c;this.loggingEnabled&&window.console&&window.console[a]&&window.console[a].apply&&(c=b.call(arguments,1),window.console[a].apply(window.console,["Carpet:{0}".replace("{0}",a),c]))},this.module=function(b,c){return a[b]?void this.warn("Module: {0} already exists. Name collision".replace("{0}",b)):(a[b]={moduleBody:c,name:b,settings:{},methods:{}},void this.log("Module: {0} has been loaded to memory".replace("{0}",b)))},this.getModule=function(b){return a[b]?a[b]:void this.warn("Module: {0} has not been found in memory".replace("{0}",b))},this.init=function(){for(var b=document.querySelectorAll("[data-module]"),c=0;c<b.length;c++){var d,e,f,g;d=b[c],e=d.getAttribute("data-module"),f=new Function("return "+d.getAttribute("data-settings"))()||{},g=a[e],g?(g.settings=f,g.moduleBody.call(g,g.methods,g.settings,d),"function"==typeof g.methods.init&&(this.info("Module: {0} has been autoinited".replace("{0}",g.name)),g.methods.init())):this.warn("Module: {0} has not been found".replace("{0}",e))}}}return new a}()}(),function(){"use strict";Carpet.advice={around:function(a,b){return function(){var c=0,d=arguments.length,e=new Array(d+1);for(e[0]=a.bind(this);d>c;c++)e[c+1]=arguments[c];return b.apply(this,e)}},before:function(a,b){var c="function"==typeof b?b:b.obj[b.fnName];return function(){return c.apply(this,arguments),a.apply(this,arguments)}},after:function(a,b){var c="function"==typeof b?b:b.obj[b.fnName];return function(){var b=(a.unbound||a).apply(this,arguments);return c.apply(this,arguments),b}},withAdvice:function(){["before","after","around"].forEach(function(a){this[a]=function(b,c){this[b]=Carpet.advice[a](this[b],c)}},this)}}}();